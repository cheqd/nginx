# A single worker is enough for load balancing and reverse proxing.
# While disk I/O can block an nginx worker, it's possible to enable
# async read and send for static files.
#
pid                  /var/run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;
error_log            /dev/stderr warn;

# Load modules
include              /etc/nginx/modules-enabled/*.conf;

events {
    # Allows each worker process to accept multiple connections concurrently
    multi_accept       on;

    # The maximum number of simultaneous connections that can be
    # opened by a worker process. This limit is shared between
    # client connections and upstream connections.
    #
    worker_connections 4096;
    
    # With this setting, multiple worker processes can accept connections simultaneously
    accept_mutex       off;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    log_not_found          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   16M;
    keepalive_timeout 20s; # default 75s

    # Logging
    # Use the stdout of init on Docker to get the logs to the log drain.
    #
    access_log              /dev/stdout combined;
    error_log               /dev/stderr warn;

    # General configuration
    include                /etc/nginx/conf.d/general.conf;

    # Security configuration
    include                /etc/nginx/conf.d/security.conf;

    # Load enabled sites
    include                /etc/nginx/sites-enabled/*;
}
